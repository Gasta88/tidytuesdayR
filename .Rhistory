p <- ggplot(data = deaths_df, aes(year)) +
geom_line(aes(y=min_value, colour="min_value", )) +
geom_point(aes(y=min_value, , colour="min_value", shape=factor(min_cause))) +
geom_line(aes(y=max_value, colour="max_value")) +
geom_point(aes(y=max_value, colour="max_value", shape=factor(max_cause))) +
geom_line(aes(y=avg_value, colour="avg_value")) +
labs(y="casualties percentage", col="high/avg/low", shape="max/min causes") +
theme(p.title = element_text(size = 12, face = "bold",
hjust = .5,
margin = margin(t = 5, b = 15)),
panel.grid.major = element_line(colour = "grey88"),
panel.grid.minor = element_blank(),
legend.title = element_text(size = 13, face = "bold"),
legend.text = element_text(size = 12),
axis.text = element_text(size = 12, color = "black"),
axis.title.x = element_text(margin = margin(t = 10),
size = 13, face = "bold"),
axis.title.y = element_text(margin = margin(r = 10),
size = 13, face = "bold"))
p + facet_wrap(~ country, nrow = 1)
# plot_by_country <- function(country){
#   L <- deaths_df$country == country
#   p <- ggplot(data = deaths_df[L,], aes(year)) +
#         geom_line(aes(y=min_value, colour="min_value", )) +
#         geom_point(aes(y=min_value, , colour="min_value", shape=factor(min_cause))) +
#         geom_line(aes(y=max_value, colour="max_value")) +
#         geom_point(aes(y=max_value, colour="max_value", shape=factor(max_cause))) +
#         geom_line(aes(y=avg_value, colour="avg_value")) +
#         labs(y="casualties percentage", col="high/avg/low", shape="max/min causes", title=unique(country))
#   p
# }
#
# for (c in seq_along(countries_of_interest)){
#   plot_by_country(country = countries_of_interest[c])
# }
# plot_by_country <- function(x=deaths_df){
#   countries <- unique(x$country)
#   for (i in seq_along(countries)){
#     p <- ggplot(data = filter(x, country == countries[i]), aes(year)) +
#           geom_line(aes(y=min_value, colour="min_value", )) +
#           geom_point(aes(y=min_value, , colour="min_value", shape=factor(min_cause))) +
#           geom_line(aes(y=max_value, colour="max_value")) +
#           geom_point(aes(y=max_value, colour="max_value", shape=factor(max_cause))) +
#           geom_line(aes(y=avg_value, colour="avg_value")) +
#           labs(y="casualties percentage", col="high/avg/low", shape="max/min causes", title=unique(country))
#     print(p)
#   }
# }
# plot_by_country()
p <- ggplot(data = deaths_df, aes(year)) +
geom_line(aes(y=min_value, colour="min_value", )) +
geom_point(aes(y=min_value, , colour="min_value", shape=factor(min_cause))) +
geom_line(aes(y=max_value, colour="max_value")) +
geom_point(aes(y=max_value, colour="max_value", shape=factor(max_cause))) +
geom_line(aes(y=avg_value, colour="avg_value")) +
labs(y="casualties percentage", col="high/avg/low", shape="max/min causes")
p + facet_wrap(~ country, nrow = 1)
# plot_by_country <- function(country){
#   L <- deaths_df$country == country
#   p <- ggplot(data = deaths_df[L,], aes(year)) +
#         geom_line(aes(y=min_value, colour="min_value", )) +
#         geom_point(aes(y=min_value, , colour="min_value", shape=factor(min_cause))) +
#         geom_line(aes(y=max_value, colour="max_value")) +
#         geom_point(aes(y=max_value, colour="max_value", shape=factor(max_cause))) +
#         geom_line(aes(y=avg_value, colour="avg_value")) +
#         labs(y="casualties percentage", col="high/avg/low", shape="max/min causes", title=unique(country))
#   p
# }
#
# for (c in seq_along(countries_of_interest)){
#   plot_by_country(country = countries_of_interest[c])
# }
# plot_by_country <- function(x=deaths_df){
#   countries <- unique(x$country)
#   for (i in seq_along(countries)){
#     p <- ggplot(data = filter(x, country == countries[i]), aes(year)) +
#           geom_line(aes(y=min_value, colour="min_value", )) +
#           geom_point(aes(y=min_value, , colour="min_value", shape=factor(min_cause))) +
#           geom_line(aes(y=max_value, colour="max_value")) +
#           geom_point(aes(y=max_value, colour="max_value", shape=factor(max_cause))) +
#           geom_line(aes(y=avg_value, colour="avg_value")) +
#           labs(y="casualties percentage", col="high/avg/low", shape="max/min causes", title=unique(country))
#     print(p)
#   }
# }
# plot_by_country()
p <- ggplot(data = deaths_df, aes(year)) +
geom_line(aes(y=min_value, colour="min_value", )) +
geom_point(aes(y=min_value, , colour="min_value", shape=factor(min_cause))) +
geom_line(aes(y=max_value, colour="max_value")) +
geom_point(aes(y=max_value, colour="max_value", shape=factor(max_cause))) +
geom_line(aes(y=avg_value, colour="avg_value")) +
labs(y="casualties percentage", col="value", shape="causes")
p + facet_wrap(~ country, nrow = 1)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(tidytuesdayR)
library(ggrepel)
library(ggplot2)
tt <- tt_load("2018-04-16")
tt %>%
map(glimpse)
# get the difference in percentage and shows the whiskers for variability
countries_of_interest <- c("Italy", "United Kingdom", "Germany")
deaths_df <- tt$global_mortality %>%
select(-country_code) %>%
mutate_if(is.numeric , replace_na, replace = 0.000) %>%
group_by(country) %>%
pivot_longer(cols=contains("(%)"), names_to="cause") %>%
group_by(country, year) %>%
summarise(max_value=max(value),
max_cause=cause[which.max(value)],
min_value=min(value),
min_cause=cause[which.min(value)],
avg_value=mean(value)) %>%
filter(country %in% countries_of_interest)
# plot_by_country <- function(country){
#   L <- deaths_df$country == country
#   p <- ggplot(data = deaths_df[L,], aes(year)) +
#         geom_line(aes(y=min_value, colour="min_value", )) +
#         geom_point(aes(y=min_value, , colour="min_value", shape=factor(min_cause))) +
#         geom_line(aes(y=max_value, colour="max_value")) +
#         geom_point(aes(y=max_value, colour="max_value", shape=factor(max_cause))) +
#         geom_line(aes(y=avg_value, colour="avg_value")) +
#         labs(y="casualties percentage", col="high/avg/low", shape="max/min causes", title=unique(country))
#   p
# }
#
# for (c in seq_along(countries_of_interest)){
#   plot_by_country(country = countries_of_interest[c])
# }
# plot_by_country <- function(x=deaths_df){
#   countries <- unique(x$country)
#   for (i in seq_along(countries)){
#     p <- ggplot(data = filter(x, country == countries[i]), aes(year)) +
#           geom_line(aes(y=min_value, colour="min_value", )) +
#           geom_point(aes(y=min_value, , colour="min_value", shape=factor(min_cause))) +
#           geom_line(aes(y=max_value, colour="max_value")) +
#           geom_point(aes(y=max_value, colour="max_value", shape=factor(max_cause))) +
#           geom_line(aes(y=avg_value, colour="avg_value")) +
#           labs(y="casualties percentage", col="high/avg/low", shape="max/min causes", title=unique(country))
#     print(p)
#   }
# }
# plot_by_country()
p <- ggplot(data = deaths_df, aes(year)) +
geom_line(aes(y=min_value, colour="min_value", )) +
geom_point(aes(y=min_value, , colour="min_value", shape=factor(min_cause))) +
geom_line(aes(y=max_value, colour="max_value")) +
geom_point(aes(y=max_value, colour="max_value", shape=factor(max_cause))) +
geom_line(aes(y=avg_value, colour="avg_value")) +
labs(y="casualties percentage", col="value", shape="causes")
p + facet_wrap(~ country, nrow = 1)
# This will save your most recent plot
ggsave(
filename = "My TidyTuesday Plot.png",
device = "png")
# plot_by_country <- function(country){
#   L <- deaths_df$country == country
#   p <- ggplot(data = deaths_df[L,], aes(year)) +
#         geom_line(aes(y=min_value, colour="min_value", )) +
#         geom_point(aes(y=min_value, , colour="min_value", shape=factor(min_cause))) +
#         geom_line(aes(y=max_value, colour="max_value")) +
#         geom_point(aes(y=max_value, colour="max_value", shape=factor(max_cause))) +
#         geom_line(aes(y=avg_value, colour="avg_value")) +
#         labs(y="casualties percentage", col="high/avg/low", shape="max/min causes", title=unique(country))
#   p
# }
#
# for (c in seq_along(countries_of_interest)){
#   plot_by_country(country = countries_of_interest[c])
# }
# plot_by_country <- function(x=deaths_df){
#   countries <- unique(x$country)
#   for (i in seq_along(countries)){
#     p <- ggplot(data = filter(x, country == countries[i]), aes(year)) +
#           geom_line(aes(y=min_value, colour="min_value", )) +
#           geom_point(aes(y=min_value, , colour="min_value", shape=factor(min_cause))) +
#           geom_line(aes(y=max_value, colour="max_value")) +
#           geom_point(aes(y=max_value, colour="max_value", shape=factor(max_cause))) +
#           geom_line(aes(y=avg_value, colour="avg_value")) +
#           labs(y="casualties percentage", col="high/avg/low", shape="max/min causes", title=unique(country))
#     print(p)
#   }
# }
# plot_by_country()
p <- ggplot(data = deaths_df, aes(year)) +
geom_line(aes(y=min_value, colour="min_value", )) +
geom_point(aes(y=min_value, , colour="min_value", shape=factor(min_cause))) +
geom_line(aes(y=max_value, colour="max_value")) +
geom_point(aes(y=max_value, colour="max_value", shape=factor(max_cause))) +
geom_line(aes(y=avg_value, colour="avg_value")) +
labs(y="casualties percentage", col="value", shape="causes")
p + facet_wrap(~ country, nrow = 3)
# plot_by_country <- function(country){
#   L <- deaths_df$country == country
#   p <- ggplot(data = deaths_df[L,], aes(year)) +
#         geom_line(aes(y=min_value, colour="min_value", )) +
#         geom_point(aes(y=min_value, , colour="min_value", shape=factor(min_cause))) +
#         geom_line(aes(y=max_value, colour="max_value")) +
#         geom_point(aes(y=max_value, colour="max_value", shape=factor(max_cause))) +
#         geom_line(aes(y=avg_value, colour="avg_value")) +
#         labs(y="casualties percentage", col="high/avg/low", shape="max/min causes", title=unique(country))
#   p
# }
#
# for (c in seq_along(countries_of_interest)){
#   plot_by_country(country = countries_of_interest[c])
# }
# plot_by_country <- function(x=deaths_df){
#   countries <- unique(x$country)
#   for (i in seq_along(countries)){
#     p <- ggplot(data = filter(x, country == countries[i]), aes(year)) +
#           geom_line(aes(y=min_value, colour="min_value", )) +
#           geom_point(aes(y=min_value, , colour="min_value", shape=factor(min_cause))) +
#           geom_line(aes(y=max_value, colour="max_value")) +
#           geom_point(aes(y=max_value, colour="max_value", shape=factor(max_cause))) +
#           geom_line(aes(y=avg_value, colour="avg_value")) +
#           labs(y="casualties percentage", col="high/avg/low", shape="max/min causes", title=unique(country))
#     print(p)
#   }
# }
# plot_by_country()
p <- ggplot(data = deaths_df, aes(year)) +
geom_line(aes(y=min_value, colour="min_value", )) +
geom_point(aes(y=min_value, , colour="min_value", shape=factor(min_cause))) +
geom_line(aes(y=max_value, colour="max_value")) +
geom_point(aes(y=max_value, colour="max_value", shape=factor(max_cause))) +
geom_line(aes(y=avg_value, colour="avg_value")) +
labs(y="casualties percentage", col="value", shape="causes")
p + facet_wrap(~ country, nrow = 3)
# plot_by_country <- function(country){
#   L <- deaths_df$country == country
#   p <- ggplot(data = deaths_df[L,], aes(year)) +
#         geom_line(aes(y=min_value, colour="min_value", )) +
#         geom_point(aes(y=min_value, , colour="min_value", shape=factor(min_cause))) +
#         geom_line(aes(y=max_value, colour="max_value")) +
#         geom_point(aes(y=max_value, colour="max_value", shape=factor(max_cause))) +
#         geom_line(aes(y=avg_value, colour="avg_value")) +
#         labs(y="casualties percentage", col="high/avg/low", shape="max/min causes", title=unique(country))
#   p
# }
#
# for (c in seq_along(countries_of_interest)){
#   plot_by_country(country = countries_of_interest[c])
# }
# plot_by_country <- function(x=deaths_df){
#   countries <- unique(x$country)
#   for (i in seq_along(countries)){
#     p <- ggplot(data = filter(x, country == countries[i]), aes(year)) +
#           geom_line(aes(y=min_value, colour="min_value", )) +
#           geom_point(aes(y=min_value, , colour="min_value", shape=factor(min_cause))) +
#           geom_line(aes(y=max_value, colour="max_value")) +
#           geom_point(aes(y=max_value, colour="max_value", shape=factor(max_cause))) +
#           geom_line(aes(y=avg_value, colour="avg_value")) +
#           labs(y="casualties percentage", col="high/avg/low", shape="max/min causes", title=unique(country))
#     print(p)
#   }
# }
# plot_by_country()
p <- ggplot(data = deaths_df, aes(year)) +
geom_line(aes(y=min_value, colour="min_value", )) +
geom_point(aes(y=min_value, , colour="min_value", shape=factor(min_cause))) +
geom_line(aes(y=max_value, colour="max_value")) +
geom_point(aes(y=max_value, colour="max_value", shape=factor(max_cause))) +
geom_line(aes(y=avg_value, colour="avg_value")) +
labs(y="casualties percentage", col="value", shape="causes")
p + facet_wrap(~ country, nrow = 2)
# plot_by_country <- function(country){
#   L <- deaths_df$country == country
#   p <- ggplot(data = deaths_df[L,], aes(year)) +
#         geom_line(aes(y=min_value, colour="min_value", )) +
#         geom_point(aes(y=min_value, , colour="min_value", shape=factor(min_cause))) +
#         geom_line(aes(y=max_value, colour="max_value")) +
#         geom_point(aes(y=max_value, colour="max_value", shape=factor(max_cause))) +
#         geom_line(aes(y=avg_value, colour="avg_value")) +
#         labs(y="casualties percentage", col="high/avg/low", shape="max/min causes", title=unique(country))
#   p
# }
#
# for (c in seq_along(countries_of_interest)){
#   plot_by_country(country = countries_of_interest[c])
# }
# plot_by_country <- function(x=deaths_df){
#   countries <- unique(x$country)
#   for (i in seq_along(countries)){
#     p <- ggplot(data = filter(x, country == countries[i]), aes(year)) +
#           geom_line(aes(y=min_value, colour="min_value", )) +
#           geom_point(aes(y=min_value, , colour="min_value", shape=factor(min_cause))) +
#           geom_line(aes(y=max_value, colour="max_value")) +
#           geom_point(aes(y=max_value, colour="max_value", shape=factor(max_cause))) +
#           geom_line(aes(y=avg_value, colour="avg_value")) +
#           labs(y="casualties percentage", col="high/avg/low", shape="max/min causes", title=unique(country))
#     print(p)
#   }
# }
# plot_by_country()
p <- ggplot(data = deaths_df, aes(year)) +
geom_line(aes(y=min_value, colour="min_value", )) +
geom_point(aes(y=min_value, , colour="min_value", shape=factor(min_cause))) +
geom_line(aes(y=max_value, colour="max_value")) +
geom_point(aes(y=max_value, colour="max_value", shape=factor(max_cause))) +
geom_line(aes(y=avg_value, colour="avg_value")) +
labs(y="casualties percentage", col="value", shape="causes")
p + facet_wrap(~ country, nrow = 1,scales = "free")
# plot_by_country <- function(country){
#   L <- deaths_df$country == country
#   p <- ggplot(data = deaths_df[L,], aes(year)) +
#         geom_line(aes(y=min_value, colour="min_value", )) +
#         geom_point(aes(y=min_value, , colour="min_value", shape=factor(min_cause))) +
#         geom_line(aes(y=max_value, colour="max_value")) +
#         geom_point(aes(y=max_value, colour="max_value", shape=factor(max_cause))) +
#         geom_line(aes(y=avg_value, colour="avg_value")) +
#         labs(y="casualties percentage", col="high/avg/low", shape="max/min causes", title=unique(country))
#   p
# }
#
# for (c in seq_along(countries_of_interest)){
#   plot_by_country(country = countries_of_interest[c])
# }
# plot_by_country <- function(x=deaths_df){
#   countries <- unique(x$country)
#   for (i in seq_along(countries)){
#     p <- ggplot(data = filter(x, country == countries[i]), aes(year)) +
#           geom_line(aes(y=min_value, colour="min_value", )) +
#           geom_point(aes(y=min_value, , colour="min_value", shape=factor(min_cause))) +
#           geom_line(aes(y=max_value, colour="max_value")) +
#           geom_point(aes(y=max_value, colour="max_value", shape=factor(max_cause))) +
#           geom_line(aes(y=avg_value, colour="avg_value")) +
#           labs(y="casualties percentage", col="high/avg/low", shape="max/min causes", title=unique(country))
#     print(p)
#   }
# }
# plot_by_country()
p <- ggplot(data = deaths_df, aes(year)) +
geom_line(aes(y=min_value, colour="min_value", )) +
geom_point(aes(y=min_value, , colour="min_value", shape=factor(min_cause))) +
geom_line(aes(y=max_value, colour="max_value")) +
geom_point(aes(y=max_value, colour="max_value", shape=factor(max_cause))) +
geom_line(aes(y=avg_value, colour="avg_value")) +
theme(aspect.ratio=4/3) +
labs(y="casualties percentage", col="value", shape="causes")
p + facet_wrap(~ country, nrow = 1,scales = "free")
?geom_line
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(tidytuesdayR)
library(ggrepel)
library(ggplot2)
tt <- tt_load("2018-04-16")
tt %>%
map(glimpse)
countries_of_interest <- c("Italy", "United Kingdom", "Germany")
deaths_df <- tt$global_mortality %>%
select(-country_code) %>%
mutate_if(is.numeric , replace_na, replace = 0.000) %>%
group_by(country) %>%
pivot_longer(cols=contains("(%)"), names_to="cause") %>%
group_by(country, year) %>%
summarise(max_value=max(value),
max_cause=cause[which.max(value)],
min_value=min(value),
min_cause=cause[which.min(value)],
avg_value=mean(value)) %>%
filter(country %in% countries_of_interest)
p <- ggplot(data = deaths_df, aes(year)) +
geom_line(aes(y=min_value, colour="min_value", )) +
geom_point(aes(y=min_value, , colour="min_value", shape=factor(min_cause))) +
geom_line(aes(y=max_value, colour="max_value")) +
geom_point(aes(y=max_value, colour="max_value", shape=factor(max_cause))) +
geom_line(aes(y=avg_value, colour="avg_value")) +
theme(aspect.ratio=4/3) +
labs(y="casualties percentage", col="value", shape="causes")
p + facet_wrap(~ country, nrow = 1,scales = "free")
# This will save your most recent plot
ggsave(
filename = "My TidyTuesday Plot.png",
device = "png", dpi=700)
p <- ggplot(data = deaths_df, aes(year)) +
geom_line(aes(y=min_value, colour="min_value", )) +
geom_point(aes(y=min_value, , colour="min_value", shape=factor(min_cause))) +
geom_line(aes(y=max_value, colour="max_value")) +
geom_point(aes(y=max_value, colour="max_value", shape=factor(max_cause))) +
geom_line(aes(y=avg_value, colour="avg_value")) +
# theme(aspect.ratio=4/3) +
labs(y="casualties percentage", col="value", shape="causes")
p + facet_wrap(~ country, nrow = 1,scales = "free")
# This will save your most recent plot
ggsave(
filename = "My TidyTuesday Plot.png",
device = "png", dpi=700)
p <- ggplot(data = deaths_df, aes(year)) +
geom_line(aes(y=min_value, colour="min_value", )) +
geom_point(aes(y=min_value, , colour="min_value", shape=factor(min_cause))) +
geom_line(aes(y=max_value, colour="max_value")) +
geom_point(aes(y=max_value, colour="max_value", shape=factor(max_cause))) +
geom_line(aes(y=avg_value, colour="avg_value")) +
theme(aspect.ratio=1) +
labs(y="casualties percentage", col="value", shape="causes")
p + facet_wrap(~ country, nrow = 1,scales = "free")
p <- ggplot(data = deaths_df, aes(year)) +
geom_line(aes(y=min_value, colour="min_value", )) +
geom_point(aes(y=min_value, , colour="min_value", shape=factor(min_cause))) +
geom_line(aes(y=max_value, colour="max_value")) +
geom_point(aes(y=max_value, colour="max_value", shape=factor(max_cause))) +
geom_line(aes(y=avg_value, colour="avg_value")) +
labs(y="casualties percentage", col="value", shape="causes")
p + facet_wrap(~ country, nrow = 1,scales = "free")
p <- ggplot(data = deaths_df, aes(year)) +
geom_line(aes(y=min_value, colour="min_value", )) +
geom_point(aes(y=min_value, , colour="min_value", shape=factor(min_cause))) +
geom_line(aes(y=max_value, colour="max_value")) +
geom_point(aes(y=max_value, colour="max_value", shape=factor(max_cause))) +
geom_line(aes(y=avg_value, colour="avg_value")) +
labs(y="casualties percentage", col="value", shape="causes")
p + facet_wrap(~ country, nrow = 3,scales = "free")
# This will save your most recent plot
ggsave(
filename = "My TidyTuesday Plot.png",
device = "png", dpi=700)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(tidytuesdayR)
library(ggplot2)
tt <- tt_load("2018-04-29")
tt <- tt_load("2018-04-30")
tt <- tt_load("2018-05-29")
tt %>%
map(glimpse)
data < - tt$week9_comic_characters
data <- tt$week9_comic_characters
View(data)
unique(data$publisher)
is.na(data$appearances)
sum(is.na(data$appearances))
sum(is.na(data$sex))
unique(data$align)
unique(data$sex)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(tidytuesdayR)
library(ggplot2)
tt <- tt_load("2018-05-29")
tt %>%
map(glimpse)
# get number of good vs evil / DC vs Marvel / male vs female in one single plot
deaths_df <- tt$week9_comic_characters %>%
select(publisher, align, sex, appearances) %>%
replace_na(list(publisher = "Independent Publisher", align = "Neutral", sex+"Agender Characters", appearances=0)) %>%
mutate(align = ifelse(align == "Reformed Criminals", "Good Characters", align))
# get number of good vs evil / DC vs Marvel / male vs female in one single plot
deaths_df <- tt$week9_comic_characters %>%
select(publisher, align, sex, appearances) %>%
replace_na(list(publisher = "Independent Publisher", align = "Neutral", sex+"Agender Characters", appearances=0)) %>%
mutate(align = ifelse(align == "Reformed Criminals", "Good Characters", align))
# get number of good vs evil / DC vs Marvel / male vs female in one single plot
main_df <- tt$week9_comic_characters %>%
select(publisher, align, sex, appearances) %>%
replace_na(list(publisher = "Independent Publisher", align = "Neutral", sex+"Agender Characters", appearances=0)) %>%
mutate(align = ifelse(align == "Reformed Criminals", "Good Characters", align))
# get number of good vs evil / DC vs Marvel / male vs female in one single plot
main_df <- tt$week9_comic_characters %>%
select(publisher, align, sex, appearances) %>%
replace_na(list(publisher = "Independent Publisher", align = "Neutral", sex="Agender Characters", appearances=0)) %>%
mutate(align = ifelse(align == "Reformed Criminals", "Good Characters", align))
View(main_df)
# get number of good vs evil / DC vs Marvel / male vs female in one single plot
main_df <- tt$week9_comic_characters %>%
select(publisher, align, sex, appearances) %>%
replace_na(list(publisher = "Independent Publisher", align = "Neutral Characters", sex="Agender Characters", appearances=0)) %>%
mutate(align = ifelse(align == "Reformed Criminals", "Good Characters", align))
# get number of good vs evil / DC vs Marvel / male vs female in one single plot
main_df <- tt$week9_comic_characters %>%
select(publisher, align, sex, appearances) %>%
replace_na(list(publisher = "Independent Publisher", align = "Neutral Characters", sex="Agender Characters", appearances=0)) %>%
mutate(align = ifelse(align == "Reformed Criminals", "Good Characters", align)) %>%
group_by(publisher, align, sex) %>%
summarise(appearances = count(appearances))
# get number of good vs evil / DC vs Marvel / male vs female in one single plot
main_df <- tt$week9_comic_characters %>%
select(publisher, align, sex, appearances) %>%
replace_na(list(publisher = "Independent Publisher", align = "Neutral Characters", sex="Agender Characters", appearances=0)) %>%
mutate(align = ifelse(align == "Reformed Criminals", "Good Characters", align)) %>%
group_by(publisher, align, sex) %>%
summarise(appearances = sum(appearances))
# get number of good vs evil / DC vs Marvel / male vs female in one single plot
main_df <- tt$week9_comic_characters %>%
select(publisher, align, sex, appearances) %>%
replace_na(list(publisher = "Independent Publisher", align = "Neutral Characters", sex="Agender Characters", appearances=0)) %>%
mutate(align = ifelse(align == "Reformed Criminals", "Good Characters", align))
# %>%
#   group_by(publisher, align, sex) %>%
#   summarise(appearances = sum(appearances))
p <- ggplot(data = main_df)+
stat_count(mapping = aes(x = align))
p <- ggplot(data = main_df)+
stat_count(mapping = aes(x = align))
p + facet_wrap(~ publisher, nrow = 3,scales = "free")
p <- ggplot(data = main_df)+
stat_count(mapping = aes(x = align)) +
facet_wrap(~ publisher, nrow = 3,scales = "free")
ggplot(data = main_df)+
stat_count(mapping = aes(x = align)) +
facet_wrap(~ publisher, nrow = 3,scales = "free")
ggplot(data = main_df)+
# stat_count(mapping = aes(x = align)) +
geom_bar(mapping = aes(x = align, fill = sex), position = "dodge")+
facet_wrap(~ publisher, nrow = 3,scales = "free")
ggplot(data = main_df)+
# stat_count(mapping = aes(x = align)) +
geom_bar(mapping = aes(x = sex, fill = align), position = "dodge")+
facet_wrap(~ publisher, nrow = 3,scales = "free")
